name: Version Change Trigger

on:
  push:
    branches:
      - main
    paths:
      - 'config.gradle'

permissions:
  contents: write

jobs:
  check-and-tag:
    name: Check Version and Create Tag
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      with:
        fetch-depth: 2  # Need previous commit for comparison
        
    - name: Check if version changed
      id: version_check
      run: |
        # Get version from current commit
        CURRENT_VERSION=$(grep versionName config.gradle | cut -d'"' -f2)
        CURRENT_CODE=$(grep versionCode config.gradle | grep -o '[0-9]*')
        
        # Get version from previous commit
        git checkout HEAD~1 config.gradle 2>/dev/null || true
        PREV_VERSION=$(grep versionName config.gradle | cut -d'"' -f2 || echo "")
        PREV_CODE=$(grep versionCode config.gradle | grep -o '[0-9]*' || echo "0")
        
        # Restore current version
        git checkout HEAD config.gradle
        
        echo "Previous: v$PREV_VERSION (code: $PREV_CODE)"
        echo "Current: v$CURRENT_VERSION (code: $CURRENT_CODE)"
        
        if [ "$CURRENT_VERSION" != "$PREV_VERSION" ] || [ "$CURRENT_CODE" != "$PREV_CODE" ]; then
          echo "version_changed=true" >> $GITHUB_OUTPUT
          echo "version=$CURRENT_VERSION" >> $GITHUB_OUTPUT
          echo "version_code=$CURRENT_CODE" >> $GITHUB_OUTPUT
        else
          echo "version_changed=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Check if tag exists
      if: steps.version_check.outputs.version_changed == 'true'
      id: tag_check
      run: |
        TAG_NAME="v${{ steps.version_check.outputs.version }}"
        if git ls-remote --tags origin | grep -q "refs/tags/${TAG_NAME}$"; then
          echo "tag_exists=true" >> $GITHUB_OUTPUT
        else
          echo "tag_exists=false" >> $GITHUB_OUTPUT
        fi
        
    - name: Create and push tag
      if: steps.version_check.outputs.version_changed == 'true' && steps.tag_check.outputs.tag_exists == 'false'
      run: |
        TAG_NAME="v${{ steps.version_check.outputs.version }}"
        
        git config user.name "github-actions[bot]"
        git config user.email "github-actions[bot]@users.noreply.github.com"
        
        # Create annotated tag
        git tag -a "${TAG_NAME}" -m "Release ${TAG_NAME} (code: ${{ steps.version_check.outputs.version_code }})"
        git push origin "${TAG_NAME}"
        
        echo "âœ… Created and pushed tag: ${TAG_NAME}"
        
    - name: Summary
      if: steps.version_check.outputs.version_changed == 'true'
      run: |
        echo "## ðŸ“¦ Version Update Detected" >> $GITHUB_STEP_SUMMARY
        echo "" >> $GITHUB_STEP_SUMMARY
        echo "- **Version**: v${{ steps.version_check.outputs.version }}" >> $GITHUB_STEP_SUMMARY
        echo "- **Version Code**: ${{ steps.version_check.outputs.version_code }}" >> $GITHUB_STEP_SUMMARY
        if [ "${{ steps.tag_check.outputs.tag_exists }}" == "false" ]; then
          echo "- **Tag**: âœ… Created v${{ steps.version_check.outputs.version }}" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "The release workflow will be triggered automatically by the new tag." >> $GITHUB_STEP_SUMMARY
        else
          echo "- **Tag**: Already exists" >> $GITHUB_STEP_SUMMARY
        fi