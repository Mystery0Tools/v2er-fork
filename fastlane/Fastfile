# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#     https://docs.fastlane.tools/plugins/available-plugins

default_platform(:android)

platform :android do
  desc "Build debug APK"
  lane :debug do
    gradle(
      task: "assembleDebug",
      print_command: true
    )
  end

  desc "Build release APK"
  lane :build_apk do
    gradle(
      task: "assembleRelease",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_PATH"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
      },
      print_command: false
    )
  end

  desc "Build release bundle (AAB)"
  lane :build_bundle do
    gradle(
      task: "bundleRelease",
      properties: {
        "android.injected.signing.store.file" => ENV["KEYSTORE_PATH"],
        "android.injected.signing.store.password" => ENV["KEYSTORE_PASSWORD"],
        "android.injected.signing.key.alias" => ENV["KEY_ALIAS"],
        "android.injected.signing.key.password" => ENV["KEY_PASSWORD"]
      },
      print_command: false
    )
  end

  desc "Deploy to Google Play Store (Internal Track)"
  lane :deploy_internal do
    build_bundle
    upload_to_play_store(
      track: "internal",
      release_status: "draft",
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      aab: "app/build/outputs/bundle/release/app-release.aab"
    )
  end

  desc "Deploy to Google Play Store (Alpha Track)"
  lane :deploy_alpha do
    build_bundle
    upload_to_play_store(
      track: "alpha",
      release_status: "completed",
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true,
      aab: "app/build/outputs/bundle/release/app-release.aab"
    )
  end

  desc "Deploy to Google Play Store (Beta Track)"
  lane :deploy_beta do
    build_bundle
    upload_to_play_store(
      track: "beta",
      release_status: "completed",
      skip_upload_metadata: false,
      skip_upload_images: false,
      skip_upload_screenshots: false,
      aab: "app/build/outputs/bundle/release/app-release.aab"
    )
  end

  desc "Deploy to Google Play Store (Production)"
  lane :deploy_production do
    build_bundle
    upload_to_play_store(
      track: "production",
      release_status: "completed",
      skip_upload_metadata: false,
      skip_upload_images: false,
      skip_upload_screenshots: false,
      aab: "app/build/outputs/bundle/release/app-release.aab"
    )
  end

  desc "Promote from internal to alpha"
  lane :promote_to_alpha do
    upload_to_play_store(
      track: "internal",
      track_promote_to: "alpha",
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Promote from alpha to beta"
  lane :promote_to_beta do
    upload_to_play_store(
      track: "alpha",
      track_promote_to: "beta",
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Promote from beta to production"
  lane :promote_to_production do
    upload_to_play_store(
      track: "beta",
      track_promote_to: "production",
      rollout: "0.1",  # Start with 10% rollout (0.1 = 10%)
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Complete production rollout"
  lane :complete_rollout do
    upload_to_play_store(
      track: "production",
      rollout: "1.0",  # 100% rollout
      skip_upload_apk: true,
      skip_upload_aab: true,
      skip_upload_metadata: true,
      skip_upload_images: true,
      skip_upload_screenshots: true
    )
  end

  desc "Run tests"
  lane :test do
    gradle(task: "test")
  end

  desc "Run lint"
  lane :lint do
    gradle(task: "lint")
  end

  desc "Submit a new build to Crashlytics for testing"
  lane :crashlytics_beta do
    build_apk
    # Assuming Firebase Crashlytics is configured
    # firebase_app_distribution(
    #   app: ENV["FIREBASE_APP_ID"],
    #   groups: "testers",
    #   release_notes: "New beta build"
    # )
  end
end